buildscript {
	ext {
		springBootVersion = '2.4.0'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
		classpath "io.swagger.core.v3:swagger-gradle-plugin:2.1.5"
	}
}

plugins {
	id 'io.swagger.core.v3.swagger-gradle-plugin' version '2.1.5'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'org.springframework.boot' version '2.4.0'
	id 'com.palantir.docker' version '0.25.0'
	id 'java'
}

group = 'rhribeiro25'
version = '1.0.0'
sourceCompatibility = '1.8'

bootJar {
	baseName = 'bank'
	version =  '1.0.0'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//Spring Framework
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.jetbrains:annotations:19.0.0'
	implementation 'org.jetbrains:annotations:19.0.0'

	//Swagger
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'

	//Database
	runtimeOnly('org.postgresql:postgresql')

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	name "${project.group}/${bootJar.baseName}"
	tags "${bootJar.version}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}

test {
	useJUnitPlatform()
}
